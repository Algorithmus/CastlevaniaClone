[gd_scene load_steps=19 format=2]

[ext_resource path="res://scenes/common/damagables/enchantedarmor/EnchantedArmor.gd" type="Script" id=1]
[ext_resource path="res://scenes/common/damagables/enchantedarmor/walk.png" type="Texture" id=2]
[ext_resource path="res://scenes/common/damagables/enchantedarmor/hurt.png" type="Texture" id=3]
[ext_resource path="res://scenes/common/damagables/skeleton/die.wav" type="Sample" id=4]
[ext_resource path="res://scenes/common/stun.tscn" type="PackedScene" id=5]

[sub_resource type="Shader" id=1]

_code = {
"fragment": "//this shader only works properly with premultiplied alpha blend mode
uniform float aura_width=2.0;
uniform color aura_color=vec4(0.4,0.7,0.3,1);

vec4 col = tex(TEXTURE,UV);
vec2 ps = TEXTURE_PIXEL_SIZE;
float a;
float maxa=col.a;
float mina=col.a;
a=tex(TEXTURE,UV+vec2(0,-aura_width)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
a=tex(TEXTURE,UV+vec2(0,aura_width)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
a=tex(TEXTURE,UV+vec2(-aura_width,0)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
a=tex(TEXTURE,UV+vec2(aura_width,0)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
col.rgb*=col.a;
COLOR=col;//mix(col,aura_color,maxa-mina);
float auraa=(maxa-mina);

COLOR.rgb+=aura_color.rgb*(maxa-mina);",
"fragment_ofs": 0,
"light": "",
"light_ofs": 0,
"vertex": "",
"vertex_ofs": 0
}

[sub_resource type="ShaderMaterial" id=2]

shader/shader = SubResource( 1 )
shader/shading_mode = 0
shader_param/aura_width = 2.0
shader_param/aura_color = Color( 0, 0.783484, 1, 1 )

[sub_resource type="Shader" id=3]

_code = {
"fragment": "//this shader only works properly with premultiplied alpha blend mode
uniform float aura_width=2.0;
uniform color aura_color=vec4(0.4,0.7,0.3,1);

vec4 col = tex(TEXTURE,UV);
vec2 ps = TEXTURE_PIXEL_SIZE;
float a;
float maxa=col.a;
float mina=col.a;
a=tex(TEXTURE,UV+vec2(0,-aura_width)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
a=tex(TEXTURE,UV+vec2(0,aura_width)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
a=tex(TEXTURE,UV+vec2(-aura_width,0)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
a=tex(TEXTURE,UV+vec2(aura_width,0)*ps).a;
maxa=max(a,maxa); 
mina=min(a,mina);
col.rgb*=col.a;
COLOR=col;//mix(col,aura_color,maxa-mina);
float auraa=(maxa-mina);

COLOR.rgb+=aura_color.rgb*(maxa-mina);",
"fragment_ofs": 0,
"light": "",
"light_ofs": 0,
"vertex": "",
"vertex_ofs": 0
}

[sub_resource type="ShaderMaterial" id=4]

shader/shader = SubResource( 3 )
shader/shading_mode = 0
shader_param/aura_width = 2.0
shader_param/aura_color = Color( 0, 0.784314, 1, 1 )

[sub_resource type="Animation" id=5]

length = 0.3
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("walk:visible")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("die:visible")
tracks/1/interp = 1
tracks/1/imported = false
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("die:frame")
tracks/2/interp = 1
tracks/2/imported = false
tracks/2/keys = {
"times": PoolRealArray( 0, 0.1, 0.1, 0.2, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 3, 4, 4, 5, 5 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("SamplePlayer:play/play")
tracks/3/interp = 1
tracks/3/imported = false
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "s_die" ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("hurt:visible")
tracks/4/interp = 1
tracks/4/imported = false
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="Animation" id=6]

length = 0.4
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("walk:visible")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("die:visible")
tracks/1/interp = 1
tracks/1/imported = false
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("hurt:visible")
tracks/2/interp = 1
tracks/2/imported = false
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("hurt:frame")
tracks/3/interp = 1
tracks/3/imported = false
tracks/3/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 0, 1 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("hurt:offset")
tracks/4/interp = 1
tracks/4/imported = false
tracks/4/keys = {
"times": PoolRealArray( 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 16, 0 ), Vector2( 21, 0 ), Vector2( 16, 0 ) ]
}

[sub_resource type="Animation" id=7]

length = 0.8
loop = true
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("die:visible")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("walk:visible")
tracks/1/interp = 1
tracks/1/imported = false
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("walk:frame")
tracks/2/interp = 1
tracks/2/imported = false
tracks/2/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("hurt:visible")
tracks/3/interp = 1
tracks/3/imported = false
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="RectangleShape2D" id=8]

custom_solver_bias = 0.0
extents = Vector2( 16, 64 )

[sub_resource type="Resource" id=9]

samples/s_die = {
"db": 0.0,
"pitch": 1.0,
"sample": ExtResource( 4 )
}

[node name="EnchantedArmor" type="KinematicBody2D"]

z = 1
input_pickable = false
collision_layer = 1
collision_mask = 1
collision/margin = 0.08
script = ExtResource( 1 )
__meta__ = {
"__editor_plugin_screen__": "2D"
}

[node name="enabler" type="VisibilityEnabler2D" parent="."]

scale = Vector2( 20, 15 )
rect = Rect2( -10, -10, 20, 20 )
pause_animations = true
freeze_bodies = true
pause_particles = true
pause_animated_sprites = true
process_parent = false
fixed_process_parent = false

[node name="walk" type="Sprite" parent="."]

visible = false
material = SubResource( 2 )
texture = ExtResource( 2 )
vframes = 2
hframes = 4
frame = 1

[node name="die" type="Sprite" parent="."]

visible = false
texture = ExtResource( 3 )
offset = Vector2( 16, 0 )
hframes = 5
frame = 4

[node name="hurt" type="Sprite" parent="."]

material = SubResource( 4 )
position = Vector2( 0, 16 )
texture = ExtResource( 3 )
offset = Vector2( 16, 0 )
hframes = 5
frame = 1

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]

playback_process_mode = 1
playback_default_blend_time = 0.0
root_node = NodePath("..")
anims/die = SubResource( 5 )
anims/hurt = SubResource( 6 )
anims/walk = SubResource( 7 )
playback/active = true
playback/speed = 1.0
blend_times = [  ]
autoplay = "walk"

[node name="damagable" type="Area2D" parent="."]

input_pickable = true
shapes/0/shape = SubResource( 8 )
shapes/0/transform = Transform2D( 1, 0, 0, 1, 0, 0 )
shapes/0/trigger = false
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="damagable"]

shape = SubResource( 8 )
trigger = false
_update_shape_index = 0

[node name="SamplePlayer" type="Node" parent="."]

polyphony = 1
samples = SubResource( 9 )
default/volume_db = 0.0
default/pitch_scale = 1.0
default/pan = 0.0
default/depth = 0.0
default/height = 0.0
default/filter/type = 0
default/filter/cutoff = 5000.0
default/filter/resonance = 1.0
default/filter/gain = 1.0
default/reverb_room = 2
default/reverb_send = 0.0
default/chorus_send = 0.0

[node name="Stun" parent="." instance=ExtResource( 5 )]

position = Vector2( 0, -64 )

[connection signal="enter_screen"  from="enabler"  to="." method="enter_screen" binds=[  ]]

[connection signal="exit_screen"  from="enabler"  to="." method="exit_screen" binds=[  ]]
