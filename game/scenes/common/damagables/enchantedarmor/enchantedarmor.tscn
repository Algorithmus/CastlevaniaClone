[gd_scene load_steps=15 format=1]

[ext_resource path="res://scenes/common/damagables/enchantedarmor/EnchantedArmor.gd" type="Script" id=1]
[ext_resource path="res://scenes/common/damagables/enchantedarmor/walk.png" type="Texture" id=2]
[ext_resource path="res://scenes/common/damagables/enchantedarmor/hurt.png" type="Texture" id=3]
[ext_resource path="res://scenes/common/damagables/skeleton/die.wav" type="Sample" id=4]
[ext_resource path="res://scenes/common/stun.tscn" type="PackedScene" id=5]

[sub_resource type="CanvasItemShader" id=6]

_code = { "fragment":"//this shader only works properly with premultiplied alpha blend mode\nuniform float aura_width=2.0;\nuniform color aura_color=vec4(0.4,0.7,0.3,1);\n\nvec4 col = tex(TEXTURE,UV);\nvec2 ps = TEXTURE_PIXEL_SIZE;\nfloat a;\nfloat maxa=col.a;\nfloat mina=col.a;\na=tex(TEXTURE,UV+vec2(0,-aura_width)*ps).a;\nmaxa=max(a,maxa); \nmina=min(a,mina);\na=tex(TEXTURE,UV+vec2(0,aura_width)*ps).a;\nmaxa=max(a,maxa); \nmina=min(a,mina);\na=tex(TEXTURE,UV+vec2(-aura_width,0)*ps).a;\nmaxa=max(a,maxa); \nmina=min(a,mina);\na=tex(TEXTURE,UV+vec2(aura_width,0)*ps).a;\nmaxa=max(a,maxa); \nmina=min(a,mina);\ncol.rgb*=col.a;\nCOLOR=col;//mix(col,aura_color,maxa-mina);\nfloat auraa=(maxa-mina);\n\nCOLOR.rgb+=aura_color.rgb*(maxa-mina);", "fragment_ofs":0, "light":"", "light_ofs":0, "vertex":"", "vertex_ofs":0 }

[sub_resource type="CanvasItemMaterial" id=7]

shader/shader = SubResource( 6 )
shader/shading_mode = 0
shader_param/aura_width = 2.0
shader_param/aura_color = Color( 0, 0.783484, 1, 1 )

[sub_resource type="CanvasItemShader" id=8]

_code = { "fragment":"//this shader only works properly with premultiplied alpha blend mode\nuniform float aura_width=2.0;\nuniform color aura_color=vec4(0.4,0.7,0.3,1);\n\nvec4 col = tex(TEXTURE,UV);\nvec2 ps = TEXTURE_PIXEL_SIZE;\nfloat a;\nfloat maxa=col.a;\nfloat mina=col.a;\na=tex(TEXTURE,UV+vec2(0,-aura_width)*ps).a;\nmaxa=max(a,maxa); \nmina=min(a,mina);\na=tex(TEXTURE,UV+vec2(0,aura_width)*ps).a;\nmaxa=max(a,maxa); \nmina=min(a,mina);\na=tex(TEXTURE,UV+vec2(-aura_width,0)*ps).a;\nmaxa=max(a,maxa); \nmina=min(a,mina);\na=tex(TEXTURE,UV+vec2(aura_width,0)*ps).a;\nmaxa=max(a,maxa); \nmina=min(a,mina);\ncol.rgb*=col.a;\nCOLOR=col;//mix(col,aura_color,maxa-mina);\nfloat auraa=(maxa-mina);\n\nCOLOR.rgb+=aura_color.rgb*(maxa-mina);", "fragment_ofs":0, "light":"", "light_ofs":0, "vertex":"", "vertex_ofs":0 }

[sub_resource type="CanvasItemMaterial" id=9]

shader/shader = SubResource( 8 )
shader/shading_mode = 0
shader_param/aura_width = 2.0
shader_param/aura_color = Color( 0, 0.784314, 1, 1 )

[sub_resource type="Animation" id=2]

resource/name = "die"
length = 0.3
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("walk:visibility/visible")
tracks/0/interp = 1
tracks/0/keys = { "cont":false, "times":FloatArray( 0 ), "transitions":FloatArray( 1 ), "values":[ false ] }
tracks/1/type = "value"
tracks/1/path = NodePath("die:visibility/visible")
tracks/1/interp = 1
tracks/1/keys = { "cont":false, "times":FloatArray( 0 ), "transitions":FloatArray( 1 ), "values":[ true ] }
tracks/2/type = "value"
tracks/2/path = NodePath("die:frame")
tracks/2/interp = 1
tracks/2/keys = { "cont":false, "times":FloatArray( 0, 0.1, 0.1, 0.2, 0.2 ), "transitions":FloatArray( 1, 1, 1, 1, 1 ), "values":[ 3, 4, 4, 5, 5 ] }
tracks/3/type = "value"
tracks/3/path = NodePath("SamplePlayer:play/play")
tracks/3/interp = 1
tracks/3/keys = { "cont":false, "times":FloatArray( 0 ), "transitions":FloatArray( 1 ), "values":[ "s_die" ] }
tracks/4/type = "value"
tracks/4/path = NodePath("hurt:visibility/visible")
tracks/4/interp = 1
tracks/4/keys = { "cont":false, "times":FloatArray( 0 ), "transitions":FloatArray( 1 ), "values":[ false ] }

[sub_resource type="Animation" id=5]

resource/name = "hurt"
length = 0.4
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("walk:visibility/visible")
tracks/0/interp = 1
tracks/0/keys = { "cont":false, "times":FloatArray( 0 ), "transitions":FloatArray( 1 ), "values":[ false ] }
tracks/1/type = "value"
tracks/1/path = NodePath("die:visibility/visible")
tracks/1/interp = 1
tracks/1/keys = { "cont":false, "times":FloatArray( 0 ), "transitions":FloatArray( 1 ), "values":[ false ] }
tracks/2/type = "value"
tracks/2/path = NodePath("hurt:visibility/visible")
tracks/2/interp = 1
tracks/2/keys = { "cont":false, "times":FloatArray( 0 ), "transitions":FloatArray( 1 ), "values":[ true ] }
tracks/3/type = "value"
tracks/3/path = NodePath("hurt:frame")
tracks/3/interp = 1
tracks/3/keys = { "cont":false, "times":FloatArray( 0, 0.1 ), "transitions":FloatArray( 1, 1 ), "values":[ 0, 1 ] }
tracks/4/type = "value"
tracks/4/path = NodePath("hurt:offset")
tracks/4/interp = 1
tracks/4/keys = { "cont":true, "times":FloatArray( 0.1, 0.2, 0.3 ), "transitions":FloatArray( 1, 1, 1 ), "values":[ Vector2( 16, 0 ), Vector2( 21, 0 ), Vector2( 16, 0 ) ] }

[sub_resource type="Animation" id=3]

resource/name = "walk"
length = 0.8
loop = true
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("die:visibility/visible")
tracks/0/interp = 1
tracks/0/keys = { "cont":false, "times":FloatArray( 0 ), "transitions":FloatArray( 1 ), "values":[ false ] }
tracks/1/type = "value"
tracks/1/path = NodePath("walk:visibility/visible")
tracks/1/interp = 1
tracks/1/keys = { "cont":false, "times":FloatArray( 0 ), "transitions":FloatArray( 1 ), "values":[ true ] }
tracks/2/type = "value"
tracks/2/path = NodePath("walk:frame")
tracks/2/interp = 1
tracks/2/keys = { "cont":false, "times":FloatArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ), "transitions":FloatArray( 1, 1, 1, 1, 1, 1, 1, 1 ), "values":[ 0, 1, 2, 3, 4, 5, 6, 7 ] }
tracks/3/type = "value"
tracks/3/path = NodePath("hurt:visibility/visible")
tracks/3/interp = 1
tracks/3/keys = { "cont":false, "times":FloatArray( 0 ), "transitions":FloatArray( 1 ), "values":[ false ] }

[sub_resource type="RectangleShape2D" id=1]

custom_solver_bias = 0.0
extents = Vector2( 16, 64 )

[sub_resource type="SampleLibrary" id=4]

samples/s_die = { "db":0.0, "pitch":1.0, "sample":ExtResource( 4 ) }

[node name="EnchantedArmor" type="KinematicBody2D"]

z/z = 1
input/pickable = false
collision/layers = 1
collision/mask = 1
collision/margin = 0.08
script/script = ExtResource( 1 )
__meta__ = { "__editor_plugin_screen__":"2D" }

[node name="enabler" type="VisibilityEnabler2D" parent="."]

transform/scale = Vector2( 20, 15 )
rect = Rect2( -10, -10, 20, 20 )
enabler/pause_animations = true
enabler/freeze_bodies = true
enabler/pause_particles = true
enabler/process_parent = false
enabler/fixed_process_parent = false

[node name="walk" type="Sprite" parent="."]

visibility/visible = false
material/material = SubResource( 7 )
texture = ExtResource( 2 )
vframes = 2
hframes = 4
frame = 1

[node name="die" type="Sprite" parent="."]

visibility/visible = false
texture = ExtResource( 3 )
offset = Vector2( 16, 0 )
hframes = 5
frame = 4

[node name="hurt" type="Sprite" parent="."]

material/material = SubResource( 9 )
transform/pos = Vector2( 0, 16 )
texture = ExtResource( 3 )
offset = Vector2( 16, 0 )
hframes = 5
frame = 1

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]

playback/process_mode = 1
playback/default_blend_time = 0.0
root/root = NodePath("..")
anims/die = SubResource( 2 )
anims/hurt = SubResource( 5 )
anims/walk = SubResource( 3 )
playback/active = true
playback/speed = 1.0
blend_times = [  ]
autoplay = "walk"

[node name="damagable" type="Area2D" parent="."]

visibility/visible = false
input/pickable = true
shapes/0/shape = SubResource( 1 )
shapes/0/transform = Matrix32( 1, 0, 0, 1, 0, 0 )
shapes/0/trigger = false
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="damagable"]

shape = SubResource( 1 )
trigger = false
_update_shape_index = 0

[node name="SamplePlayer" type="SamplePlayer" parent="."]

config/polyphony = 1
config/samples = SubResource( 4 )
default/volume_db = 0.0
default/pitch_scale = 1.0
default/pan = 0.0
default/depth = 0.0
default/height = 0.0
default/filter/type = 0
default/filter/cutoff = 5000.0
default/filter/resonance = 1.0
default/filter/gain = 1.0
default/reverb_room = 2
default/reverb_send = 0.0
default/chorus_send = 0.0

[node name="Stun" parent="." instance=ExtResource( 5 )]

transform/pos = Vector2( 0, -64 )

[connection signal="enter_screen" from="enabler" to="." method="enter_screen"]

[connection signal="exit_screen" from="enabler" to="." method="exit_screen"]


